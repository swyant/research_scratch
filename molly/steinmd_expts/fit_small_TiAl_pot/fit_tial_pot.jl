using PotentialLearning, InteratomicPotentials 
using Unitful, AtomsBase

cd("./fit_small_TiAl_pot")

function energy_to_quantity(e::Energy)
    eunit = e.u 
    e_quant = e.d * eunit
    e_quant
end

function subtract_eref!(ds, eref_dict)
    for config in ds
        sys = get_system(config)
        init_energy = energy_to_quantity(get_energy(config))

        atomic_energies = 0.0u"eV"

        elems = atomic_symbol(sys)
        for elem in elems
            atomic_energies += eref_dict[elem]
        end
        
        # This seems like a very stupid way to have to manipulate energies
        final_energy_q = init_energy - atomic_energies # Unitful.Quantity
        final_energy = Energy(ustrip(final_energy_q), unit(final_energy_q))

        config.data[Energy] = final_energy 
    end 
end

ds_path = "./TiAl_tutorial_cleaned.xyz"

ds = load_data(ds_path, ExtXYZ(u"eV", u"Å"))
Eref = Dict(:Ti => -1586.0195u"eV", :Al => -105.5954u"eV")

subtract_eref!(ds, Eref)

ace = ACE(species           = [:Ti, :Al],
          body_order        = 3, 
          polynomial_degree = 6,
          wL                = 1.5,
          csp               = 1.0,
          r0                = 2.9,
          rcutoff           = 5.5 )

e_descr_train = compute_local_descriptors(ds,ace)
f_descr_train = compute_force_descriptors(ds, ace)
ds_full = DataSet(ds .+ e_descr_train .+ f_descr_train)

orig_coeffs = [0.025591381519026762, 0.03527125788791906, 0.030612348271342734, 0.06646319273427727, -0.007326117584533097, 0.0021476223879284516, 0.007005564677788114, 0.007769244005502122, 0.0033019143419533176, -0.024266397752728517, -0.03511058549188825, -0.004486106026460792, 0.07649832144216986, -0.017295005584346018, 0.0348519410800185, -0.0026935081045876344, -0.0036996351104090115, 0.04250332320742131, -0.06611126598243479, 0.07452744399669442, -0.08807382022058645, 0.006553101218837121, -0.02825330387435087, -0.005070437887508557, 0.017488241826946662, -0.041461388491636234, -0.050152804966179194, 0.014554551186620662, 0.005494466857846328, 0.03395869840669037, -0.12004390275966798, 0.07758118243125994, 0.024624168020804672, 0.0006581992277555695, -0.002196641935532242, 0.03231551745953874, 0.0005431753297032715, 0.009602374511533056, 0.028907266845791348, 0.03557855646347803, 0.000832998634326787, 0.019238505326450918, -0.007863457928993406, 0.03497657242548427, -0.058485491203844206, -0.025527625067137013, -0.003851837725125408, 0.019472633328804008, -0.04975455754968226, 0.008243807089528446, 0.020612783411412677, -0.07411984524326856, 0.007005564677788615, 0.0077692440055020795, 0.003301914341951156, -0.024266397752728874, -0.03511058549188732, -0.004486106026461139, 0.004050167320520888, 0.011275083723136878, -0.009533633282696359, -0.016652089366136488, 0.005947187981081792, -0.0086386178798077, 0.027556838876613178, -0.01794755394550558, 0.0328518497817209, -0.0444008944069233, -0.04142464521909121, 0.014939466653767677, -0.0013061815492572404, -0.008399904141687925, -0.013070571180237286, 0.07022679858374972, 0.03655463426663164, -0.02425878114877371, -0.013089322405632224, 0.007663504514768707, -0.0006932536563853398, -0.015392489165582057, -0.005333834581033578, 0.000966860983206308, -0.06259246382383571, 0.04896321372972445, -0.012976299346956766, 0.00575471543255263, -0.010710826925328487, 0.009130893987440367, 0.025455356200891677, 0.03737467186835743, -0.061410072131176816, 0.05891873535070835, 0.02179281899408886, 0.02640823532251172, 0.0002904232787473565, -0.028649695323579742, -0.018788426151163752, -0.004911376520223526, 0.034242726688142995, -0.008960425717451335, -0.04627434272845332, 0.05321984323617818, 0.013802856612787245, 0.023560957961937884]
orig_lb = LBasisPotential(orig_coeffs,[0.0],ace)

###### Current default (not fit to energies at all)

f_ref = get_all_forces(ds_full)
f_orig_pred = get_all_forces(ds_full,orig_lb)
f_train_mae, f_train_rmse, f_train_rsq = calc_metrics(f_orig_pred, f_ref)
# (0.28855631043953883, 0.4743917418018139, 0.9795763651378643)

e_ref = get_all_energies(ds_full)
natoms = [length(position(sys)) for sys in get_system.(ds_full)]
epa_ref = e_ref ./ natoms

e_orig_pred = get_all_energies(ds_full,orig_lb)
epa_orig_pred = e_orig_pred ./ natoms
epa_train_mae, epa_train_rmse, epa_train_rsq = calc_metrics(epa_orig_pred, epa_ref)
# (4.8162736574599725, 4.819918692529078, -297.8025682555448) 

####### Fit against full, reference
lb_full = LBasisPotential(ace)
#Σ = learn!(lb_ref, ds_full, 1e-6) # bad nonconvex optimization way
learn!(lb_full, ds_full, [1.0,0.1], false)

@show lb_full.β
#full_coeffs = [-0.923941600720833, 1.316544840438048, 0.4453990035859336, -0.1381294112622083, -0.012924432418973265, 0.008248005712869447, -29.92116297109213, -6.892739698711244, 82.4292748812128, -55.91691018244807, 43.26440418355354, -29.301082057618824, 0.10730303608093103, -0.15811856533502372, -0.06783002805194956, 0.04351707187568301, -0.006528821410127434, -4.248056614964963, -3.539134153090673, -1.5726345840687495, -0.8775230145069075, -0.26132988821378283, 0.010952495014518455, -0.02107070142522425, -0.40284526940940096, -0.20568696077377158, -0.007693758286872111, 0.04265668937582302, -0.005777701295425481, 0.4538166865423482, 0.3828495191739894, 0.007530471087029706, 0.010361217301780036, -0.0154156247649521, -0.005112360098551032, -0.46495958899180506, -0.12354639042361429, -0.017010040427127327, 0.13488048382712348, 0.014996967940348086, -0.012316619978860037, -1.6432068768658532, 2.1176801627516064, 0.1335190171741762, -0.2277187258211211, -0.2792825995995744, -0.2783881823029633, -0.10360462450461991, 1.5539331728010497, 1.0952707882768593, 0.31928627315321734, 0.15621817002940214, 40.18003430474373, 19.870026312193616, -78.74340573671056, 58.40870490518911, -42.453827387689174, 29.37273471138377, -0.713697678125947, 0.5321431082857773, -0.32553311332170964, 0.033447074088661266, 0.20909213591565481, -0.010592873872782436, -0.4978367726704488, -4.1624625615201145, -1.306835105329724, -0.23181043394195602, 0.11295625404454913, 0.42597127279763725, -2.1766765764021283, -0.009094800415174575, -0.12910919685307276, -0.0415196082775249, -0.6745813187033638, -0.754123926008387, 1.8029400725634308, -0.1691267049996778, -1.2597168298816606, -1.3105827265070245, -0.11452651204310339, -0.6035034693363087, -1.096538078032215, -0.22911243310846227, 0.004332246040689464, 0.18576021117530284, -0.15265136105466534, -0.5928583152370432, -0.47920532805559096, -0.13869315081683845, -0.37940520567589314, -0.13289808265943437, -0.07054436472093836, 0.2136972096992303, 0.27540978586081216, 0.11003873777749174, 0.008277881040006672, -0.11516626770359026, 0.4884875620046859, -0.09972759649998396, 0.09495724317159027, 0.05009841594768669, 0.03391871578627006, 0.022994279423069634]

f_full_pred = get_all_forces(ds_full,lb_full)
f_full_mae, f_full_rmse, f_full_rsq = calc_metrics(f_ref, f_full_pred)
# (0.2723635054245067, 0.409567855982315, 0.9847645405717821)
e_full_pred = get_all_energies(ds_full,lb_full)
epa_full_pred = e_full_pred ./ natoms
epa_full_mae, epa_full_rmse, epa_full_rsq = calc_metrics(epa_full_pred, epa_ref)
# (0.017478209893809545, 0.021209161830013944, 0.9942143532543146)


#### Fit against half the database
ds_partial = ds_full[1:2:end]
lb_partial = LBasisPotential(ace)
learn!(lb_partial, ds_partial, [1.0,0.1], false)

@show lb_partial.β
#partial_coeffs = [-0.954456537503869, 1.3191094809496011, 0.2358592650022586, -0.030516510824527367, -0.03139551245098237, 0.01117391779431469, 55.62569856990078, 21.66350545992532, -2.0778183309862865, 12.82704765260413, 8.800805019054359, 9.987015001580954, 0.15075099613150683, -0.14519045438217756, -0.04529203897433177, 0.029121033303376682, -0.005128281771812571, -4.523559630339644, -4.083246234292211, -1.9436811777090781, -1.0704027146826214, -0.3710756048678056, -0.07771858049620937, 0.008852208659692183, -0.7097703298964348, -0.28921979228184025, -0.015110089795881208, 0.05535831243591584, -0.00748973394351918, 0.46381980333218964, 0.45502150175004324, 0.04249575330144731, 0.01749726918723917, 0.041009752658616144, -0.006955585847853263, -0.5286142196805259, -0.20687309612634464, -0.015549500608045167, 0.14260187326996654, 0.04165383416748792, -0.008139158905162423, -2.193856359752029, 1.3409026121506065, -0.5272167197876545, -0.7958614519952404, -0.5245673203330391, -0.10902595181261954, 0.1630100412439019, 1.6409233212700385, 1.2672279089069594, 0.29484098631752975, 0.19267919568355793, -49.83960763517949, -11.964051657044676, 4.3795025559907375, -11.138586908368248, -8.290359815047458, -9.953551364163998, -2.0289658466318468, 0.4136824488590578, -0.16179671402109477, -0.17249668012385963, 0.29566669802351875, 0.008558116357443265, 0.920183031100077, -2.6499349416176825, -0.024382110094712528, 0.5625108588278825, 0.4303668522450088, 2.7152628067244216, -2.37478716764599, -0.15379840114182564, -0.1994338962843517, -0.10543239408961141, -0.7762617156540687, -0.46605985579011716, 1.3186891651424655, 0.11645471834918061, -1.3941315831678478, -1.3514609924811463, -0.06616245921891142, 1.2064657849090679, -1.2624944105325562, -0.25374588134737425, -0.08914827654711636, 0.3318196263304785, -0.1766974482985224, 0.5844920776973105, -0.5078284693354893, -0.20869614717337714, 0.21889607199346767, -0.19361948374734914, 0.20771915005705877, 0.35698367347133636, 0.05862951860539522, 0.08622331706393788, -0.01020758411507471, -0.13652338227140984, 0.41630795774352736, 0.22650862553910553, 0.08834594656382654, 0.023366942191240605, -0.006525761261165516, 0.022538823845839148]

f_partial_pred = get_all_forces(ds_full,lb_partial)
f_partial_mae, f_partial_rmse, f_partial_rsq = calc_metrics(f_ref, f_partial_pred)
# (0.30772325044716303, 0.45516047466649123, 0.9810201433530974) 
e_partial_pred = get_all_energies(ds_full,lb_partial)
epa_partial_pred = e_partial_pred ./ natoms
epa_partial_mae, epa_partial_rmse, epa_partial_rsq = calc_metrics(epa_partial_pred, epa_ref)
# (0.020054340655333815, 0.02614488747583004, 0.9912081867257563) 

